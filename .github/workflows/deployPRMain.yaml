name: Deploy to Dev Environment

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'force-app/**'
      - 'manifest/**'

env:
  SF_USE_GENERIC_UNIX_KEYCHAIN: true
  SF_DOMAIN_RETRY: 300
  SF_DISABLE_APP_HUB: true

jobs:
  validate-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sf --version

      - name: Install SFDX Git Delta
        run: |
          echo y | sf plugins install sfdx-git-delta

      - name: Create JWT Key File
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > jwt-key.txt
          chmod 600 jwt-key.txt

      - name: Authenticate to Salesforce
        run: |
          sf org login jwt \
            --client-id ${{ secrets.SF_CLIENT_ID }} \
            --jwt-key-file jwt-key.txt \
            --username ${{ secrets.SF_USERNAME }} \
            --instance-url ${{ secrets.SF_INSTANCE_URL }} \
            --alias target-org \
            --set-default

      - name: Verify Authentication
        run: |
          sf org display --target-org target-org

      - name: Generate Delta Package
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          HEAD_BRANCH="${{ github.event.pull_request.head.sha }}"

          echo "Generating delta package between $BASE_BRANCH and $HEAD_BRANCH"
          mkdir -p delta

          sf sgd:source:delta \
            --to $HEAD_BRANCH \
            --from origin/$BASE_BRANCH \
            --output-dir delta \
            --generate-delta

          if [ ! -f "delta/package/package.xml" ] || [ ! -s "delta/package/package.xml" ]; then
            echo "No metadata changes detected"
            echo "SKIP_DEPLOYMENT=true" >> $GITHUB_ENV
          else
            echo "SKIP_DEPLOYMENT=false" >> $GITHUB_ENV
          fi

      - name: Validate Deployment (Check Only)
        id: validate_step
        if: env.SKIP_DEPLOYMENT == 'false'
        run: |
          echo "Starting validation deployment..."

          VALIDATION_RESULT=$(sf project deploy validate \
            --manifest delta/package/package.xml \
            --target-org target-org \
            --test-level RunLocalTests \
            --wait 30 \
            --json)

          echo "Validation result: $VALIDATION_RESULT"
          DEPLOY_ID=$(echo "$VALIDATION_RESULT" | jq -r '.result.id')

          echo "validation_id=$DEPLOY_ID" >> $GITHUB_OUTPUT

      - name: Convert to MDAPI
        if: env.SKIP_DEPLOYMENT == 'false'
        run: |
          sf project convert source --output-dir mdapi

      - name: Deploy MDAPI
        if: env.SKIP_DEPLOYMENT == 'false'
        run: |
          sf project deploy start \
            --wait 10 \
            --target-org target-org \
            --deploy-dir mdapi \
            --test-level RunLocalTests
